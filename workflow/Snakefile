include: "rules/00_common.smk"
include: "rules/01_pre-processing.smk"
include: "rules/02_tracking.smk"
include: "rules/03_qc.smk"
include: "rules/04_hmm.smk"

##### Target rules #####

rule all:
    input:
######################
## 00_common.smk
######################
        #rules.convert_metadata.output,
#####################
# 01_pre-processing.smk
#####################
        expand(rules.copy_videos.output,
                video = VIDEOS
        ),
        rules.add_fps.output.csv,
        expand(rules.recode_videos.output,
                video = VIDEOS
        ),
        expand(rules.set_split_coords.output,
                assay = ASSAYS,
                video = VIDEOS
        ),
        expand(rules.split_videos.output,
                zip,
                assay = ASSAYS_ZIP,
                video = VIDEOS_ZIP,
                sample = SAMPLES_ZIP,
        ),
#####################
# 02_tracking.smk
#####################
        expand(rules.track_videos.output,
                zip,
                assay = ASSAYS_ZIP_EX,
                video = VIDEOS_ZIP_EX,
                sample = SAMPLES_ZIP_EX,
        ),
#####################
# 03_qc.smk
#####################
        expand(rules.assign_ref_test.output,
                zip,
                assay = ASSAYS_ZIP_EX,
                video = VIDEOS_ZIP_EX,
                sample = SAMPLES_ZIP_EX
        ),
        rules.tracking_success.output,
#####################
# 04_hmm.smk
#####################
        expand(rules.movement_metrics.output,
                zip,
                assay = ASSAYS_ZIP_EX_TRK_INT,
                video = VIDEOS_ZIP_EX_TRK_INT,
                sample = SAMPLES_ZIP_EX_TRK_INT,
                interval = INTERVALS_ZIP_EX_TRK_INT
        ),
        expand(rules.merge_csvs.output,
                interval = config["seconds_interval"]
        ),
        expand(rules.send_to_shared_folder.output,
                interval = config["seconds_interval"]
        ),